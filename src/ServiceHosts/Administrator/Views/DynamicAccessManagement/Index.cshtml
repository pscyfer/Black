@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Common.AspNetCore.Autorizetion.DynamicAuthorizationService.Enum
@model Identity.Core.Dto.Role.DynamicAccessDto
@{
    ViewData["Title"] = "مجوز ها";
  
}
<div class="card">
    <div class="card-header bg-light">
        <h5 class="mb-1"> تنظیم سطوح دسترسی پویای نقش «@Model.RoleIncludeRoleClaim.Name»</h5>
    </div>
    <form method="post"
          asp-controller="DynamicAccessManagement"
          asp-action="Index">
        <div asp-validation-summary="ModelOnly"></div>
        <div class="card-body">
            <input name="RoleId" value="@Model.RoleIncludeRoleClaim.Id" type="hidden" />
            <div class="row">
                @{
                    int CollspanId = 1;
                }
                @{
                    int i = 0;
                }
                @foreach (var controller in Model.SecuredControllerActions.OrderBy(x => x.ControllerDisplayName))
                {
                    <div class="col-md-4">
                        <div class="card">
                            <button class="btn btn-primary" type="button" data-bs-toggle="collapse" data-bs-target="#Da@(CollspanId)" aria-expanded="true" aria-controls="Da@(CollspanId)">
                                @{
                                    var displayName = controller.ControllerDisplayName;
                                    if (string.IsNullOrWhiteSpace(displayName))
                                    {
                                        displayName = controller.ControllerName;
                                    }
                                }
                                @displayName
                            </button>

                            <div id="Da@(CollspanId)" class="collapse">
                                <ul class="list-group list-group-flush pr-0">

                                    @foreach (var action in controller.MvcActions.OrderBy(x => x.ActionDisplayName))
                                    {
                                        var isSelected = Model.RoleIncludeRoleClaim.Claims
                                        .Any(roleClaim => roleClaim.ClaimType == ConstantPolicies.DynamicPermissionClaimType &&
                                        roleClaim.ClaimValue == action.ActionId);
                                        var selected = isSelected ? "checked" : "";
                                        var actionDisplayName = action.ActionDisplayName;
                                        if (string.IsNullOrWhiteSpace(actionDisplayName))
                                        {
                                            actionDisplayName = $"{action}::{action.ActionId}";
                                        }
                                        <li class="list-group-item" role="presentation">
                                            <div class="form-check form-switch">
                                                <input class="form-check-input" name="ActionIds" type="checkbox" id="@("dac" + i)" value="@action.ActionId" @selected>
                                                <label class="form-check-label" for="@("dac" + i)">@actionDisplayName</label>
                                            </div>
                                        </li>
                                        i++;
                                    }
                                </ul>
                            </div>

                        </div>
                    </div>
                    CollspanId++;
                }
            </div>


        </div>
        <div class="card-footer bg-light clearfix">
            <button type="submit" class="btn btn-primary float-left top15">
                اعمال تغییرات
                <span aria-hidden="true" class="fas fa-thumbs-up"></span>
            </button>
        </div>
    </form>

</div>



